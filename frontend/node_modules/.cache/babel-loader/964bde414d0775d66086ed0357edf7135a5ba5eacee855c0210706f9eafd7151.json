{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vitya\\\\Documents\\\\\\u041A\\u0443\\u0440\\u0441\\\\react-course\\\\react-second\\\\frontend\\\\src\\\\components\\\\TaskListPopUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nimport \"../css/TaskListPopUp.css\";\nimport Icon from \"./Icon\";\nimport Popper from \"@mui/material/Popper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskListPopUp({\n  openTaskListPopUp\n}) {\n  _s();\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n  const [taskList, setTaskList] = useState({\n    name: \"\",\n    img: {\n      src: \"🫥\",\n      isEmoji: true\n    },\n    isRemovable: true\n  });\n  const anchorRef = React.useRef(null);\n  function OpenPicker(event) {\n    setIsPickerOpen(prev => !prev);\n  }\n  function ChooseEmoji(emoji) {\n    setTaskList(prevTaskList => ({\n      ...prevTaskList,\n      [img]: {\n        src: emoji.native,\n        isEmoji: true\n      }\n    }));\n    setIsPickerOpen(prev => !prev);\n  }\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setTaskList(prevTaskList => ({\n      ...prevTaskList,\n      [name]: value\n    }));\n  }\n  function handleSubmit() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasklist-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasklist-popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tasklist-popup__title\",\n        children: \"Create task list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"tasklist-popup__form\",\n        onSubmit: () => handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tasklist-popup__label\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"taskListNameInput\",\n            type: \"text\",\n            name: \"name\",\n            value: taskList.name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__item-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"tasklist-popup__label\",\n            children: \"Icon:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-wrapper\",\n            ref: anchorRef,\n            onClick: () => OpenPicker(),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              isEmoji: true,\n              src: taskList.img.src,\n              name: \"New list icon\",\n              size: \"2.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popper, {\n            open: isPickerOpen,\n            anchorEl: anchorRef.current,\n            placement: \"right-start\",\n            children: /*#__PURE__*/_jsxDEV(Picker, {\n              data: data,\n              onEmojiSelect: ChooseEmoji,\n              theme: \"light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__item\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskListPopUp, \"mJSTfWAv4pZky6vCNVAEOufYqWQ=\");\n_c = TaskListPopUp;\nexport default TaskListPopUp;\nvar _c;\n$RefreshReg$(_c, \"TaskListPopUp\");","map":{"version":3,"names":["React","useState","data","Picker","Icon","Popper","jsxDEV","_jsxDEV","TaskListPopUp","openTaskListPopUp","_s","isPickerOpen","setIsPickerOpen","taskList","setTaskList","name","img","src","isEmoji","isRemovable","anchorRef","useRef","OpenPicker","event","prev","ChooseEmoji","emoji","prevTaskList","native","handleInputChange","value","target","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","onChange","required","ref","onClick","size","open","anchorEl","current","placement","onEmojiSelect","theme","_c","$RefreshReg$"],"sources":["C:/Users/vitya/Documents/Курс/react-course/react-second/frontend/src/components/TaskListPopUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport data from \"@emoji-mart/data\";\r\nimport Picker from \"@emoji-mart/react\";\r\nimport \"../css/TaskListPopUp.css\";\r\nimport Icon from \"./Icon\";\r\nimport Popper from \"@mui/material/Popper\";\r\n\r\nfunction TaskListPopUp({ openTaskListPopUp }) {\r\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\r\n  const [taskList, setTaskList] = useState({\r\n    name: \"\",\r\n    img: { src: \"🫥\", isEmoji: true },\r\n    isRemovable: true,\r\n  });\r\n  const anchorRef = React.useRef(null);\r\n\r\n  function OpenPicker(event) {\r\n    setIsPickerOpen((prev) => !prev);\r\n  }\r\n  function ChooseEmoji(emoji) {\r\n    setTaskList((prevTaskList) => ({\r\n      ...prevTaskList,\r\n      [img]: { src: emoji.native, isEmoji: true },\r\n    }));\r\n    setIsPickerOpen((prev) => !prev);\r\n  }\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setTaskList((prevTaskList) => ({\r\n      ...prevTaskList,\r\n      [name]: value,\r\n    }));\r\n  }\r\n  function handleSubmit() {}\r\n\r\n  return (\r\n    <div className=\"tasklist-popup\">\r\n      <div className=\"tasklist-popup__container\">\r\n        <h3 className=\"tasklist-popup__title\">Create task list</h3>\r\n        <form className=\"tasklist-popup__form\" onSubmit={() => handleSubmit}>\r\n          <div className=\"form__item\">\r\n            <label className=\"tasklist-popup__label\">Name:</label>\r\n            <input\r\n              id=\"taskListNameInput\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={taskList.name}\r\n              onChange={handleInputChange}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div className=\"form__item-inline\">\r\n            <label className=\"tasklist-popup__label\">Icon:</label>\r\n            <div\r\n              className=\"icon-wrapper\"\r\n              ref={anchorRef}\r\n              onClick={() => OpenPicker()}\r\n            >\r\n              <Icon\r\n                isEmoji={true}\r\n                src={taskList.img.src}\r\n                name=\"New list icon\"\r\n                size=\"2.5\"\r\n              />\r\n            </div>\r\n            <Popper\r\n              open={isPickerOpen}\r\n              anchorEl={anchorRef.current}\r\n              placement=\"right-start\"\r\n            >\r\n              <Picker data={data} onEmojiSelect={ChooseEmoji} theme=\"light\" />\r\n            </Popper>\r\n          </div>\r\n          <input className=\"form__item\" type=\"submit\"></input>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default TaskListPopUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}